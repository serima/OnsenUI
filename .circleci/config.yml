version: 2
jobs:
  build:
    working_directory: ~/working_directory
    docker:
      - image: circleci/node:6-browsers
        env:
          - DISPLAY=:99
          - CHROME_BIN=/usr/bin/google-chrome
    steps:
      - checkout
      - run:
          name: Print system information
          command: |
            echo "node $(node -v)"
            echo "npm v$(npm --version)"
            echo "Yarn v$(yarn --version)"
            echo "$(google-chrome --version)"
      - run:
          name: Instal coveralls and gulp globally
          command: sudo yarn global add coveralls gulp

      - restore_cache:
          keys:
            - v1-css-components-cache-{{ checksum "css-components/yarn.lock" }}

      - run:
          name: Install css-components dependencies
          command: |
            cd css-components
            yarn install --pure-lockfile

      - save_cache:
          key: v1-css-components-cache-{{ checksum "css-components/yarn.lock" }}
          paths:
            - ./css-components/node_modules

      - restore_cache:
          keys:
            - v1-onsenui-cache-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install --pure-lockfile

      - save_cache:
          key: v1-onsenui-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      - run:
          name: gulp build
          command: gulp build

      - restore_cache:
          keys:
            - v1-angular2-cache-{{ checksum "bindings/angular2/yarn.lock" }}

      - run:
          name: Install Angular 2 dependencies
          command: |
            cd bindings/angular2
            yarn install --pure-lockfile

      - save_cache:
          key: v1-angular2-cache-{{ checksum "bindings/angular2/yarn.lock" }}
          paths:
            - ./bindings/angular2/node_modules

      - restore_cache:
          keys:
            - v1-react-cache-{{ checksum "bindings/react/yarn.lock" }}

      - run:
          name: Install React dependencies
          command: |
            cd bindings/react
            yarn install --pure-lockfile

      - save_cache:
          key: v1-react-cache-{{ checksum "bindings/react/yarn.lock" }}
          paths:
            - ./bindings/react/node_modules

      - restore_cache:
          keys:
            - v1-vue-cache-{{ checksum "bindings/vue/yarn.lock" }}

      - run:
          name: Install Vue dependencies
          command: |
            cd bindings/vue
            yarn install --pure-lockfile

      - save_cache:
          key: v1-vue-cache-{{ checksum "bindings/vue/yarn.lock" }}
          paths:
            - ./bindings/vue/node_modules

      - run:
          name: Run Tests
          command: npm run test:skip-build

      - run: cd bindings/angular1; gulp e2e-test # bindings/angular1 has no package.json.
      - run: cd bindings/angular2; npm test
      - run: cd bindings/react; npm test
      - run: cd bindings/react; npm run build
      - run: cd bindings/vue; npm test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit
            find . -type f -regex "./core/test/unit/.*xml" -exec cp {} ~/junit/ \;
            cat ./core/test/unit/coverage/*/lcov.info | coveralls || true # Ignore if this fails.
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
